name: CI/CD Pipeline

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: sie-backend
  DOCKER_USERNAME: djmaldonado19
  SERVER_IP: 20.55.81.100
  SERVER_PATH: /home/azureuser/repos/ayd-backend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.run_number }} .
          echo "Built Docker image for branch: ${{ github.ref_name }}"

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ env.DOCKER_IMAGE }}:${{ github.run_number }} ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.run_number }}
          docker tag ${{ env.DOCKER_IMAGE }}:${{ github.run_number }} ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.run_number }}
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          echo "Pushed images to Docker Hub"

      - name: Deploy to server
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to server ${{ env.SERVER_IP }}"

          sudo apt-get update
          sudo apt-get install -y sshpass

          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ env.SERVER_IP }} "
            cd ${{ env.SERVER_PATH }} &&
            git pull origin main &&
            
            echo 'SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/sie_db' > .env &&
            echo 'SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USER }}' >> .env &&
            echo 'SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}' >> .env &&
            echo 'MARIADB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}' >> .env &&
            echo 'MARIADB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> .env &&
            echo 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env &&
            echo 'MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}' >> .env &&
            echo 'VERSION=latest' >> .env &&
            
            # Deploy
            docker-compose pull &&
            docker-compose down &&
            docker-compose up -d &&

            sleep 20 &&
            docker-compose ps
          "
          echo "Deployment completed"

      - name: Cleanup
        if: always()
        run: |
          docker system prune -f || true
